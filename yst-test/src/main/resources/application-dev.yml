#开发环境
server:
  port: 8011
web:
  #upload-path: D:/data/
  #upload-url: D:/
  #upload: D:/multiuse/logo/
  #access-path: upload/

  #liunx路径
  upload-path: /home/data/
  upload-url: /
  upload: /home/multiuse/logo/
  access-path: upload/


#微信公众号
wechat:
  APPID: wx85fe53b65b44c4da
  AppSecret: a6d25779f96b755c6c4a743da6483c1f
  templateid:
    Equipment-alarm-reminder: 9IjRtKNU9UlX7GAr5AwsNnIm3GlDuS8B4S-dU10YWqY   #设备报警提醒
    Equipment-warning-reminder: C5qeXjQLiRljmMiGNL-i5oDg1rrBln4J0L_Xw0rJKvE    #设备预警提醒
    Equipment-failure-warning: pnGGFGZ7iS1jLzJ3Ig2x-onHNQuJbdkUmKl3Tl_53Wo   #设备故障提醒


spring:
  # 配置数据源
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://36.112.118.18:3306/configuration?useUnicode=true&characterEncoding=utf-8&allowMultiQueries=true&serverTimezone=GMT%2B8
    username: yst_g
    password: 123456
    type: com.alibaba.druid.pool.DruidDataSource
      #    初始连接数
    initialSize: 50
      #    最大连接数
    maxActive: 200
      #    最长等待时间
    maxWait: 60000
      #    定义最小空闲
    minIdle: 20
      #    每隔60秒运行一次空闲连接回收器
    timeBetweenEvictionRunsMillis: 60000
      #    连接池中的空闲连接5分钟后被回收
    minEvictableIdleTimeMillis: 300000
      #    验证使用的sql语句
    validationQuery: SELECT 1 FROM DUAL
      #    如果连接被空闲连接回收器进行检验，如果检验失败，连接则被从池中去除
    testWhileIdle: true
      #    借出连接时不测试  true为测试（据百度说法影响性能）
    testOnBorrow: false
      #   猜测大概是是否返回测试结果或者重复测试等（为了性能不开启）
    testOnReturn: false
      #    缓存游标，优化查询效率
    poolPreparedStatements: true
      #   配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
      #    属性类型是字符串，通过别名的方式配置扩展插件，常用的插件有：
      #    监控统计用的filter:stat日志用的filter:log4j防御sql注入的filter:wall
    filters: stat,wall,log4j
      #    当大于0时，poolPreparedStatements自动触发修改为true。
      #    在Druid中，不会存在Oracle下PSCache占用内存过多的问题，可以把这个数值配置大一些，比如说100
    maxPoolPreparedStatementPerConnectionSize: 20
      #    合并多个DruidDataSource的监控数据
    useGlobalDataSourceStat: true
      #    通过connectProperties属性来打开mergeSql功能；慢SQL记录
      #    根据与源表联接的结果，对目标表执行插入、更新或删除操作。例如，根据在另一个表中找到的差异在一个表中插入、更新或删除行，
      #    可以对两个表进行同步。”,通过这个描述，我们可以看出Merge是关于对于两个表之间的数据进行操作的
      #    （我理解为主外键表之间的数据同步）
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500
# mybatis-plus相关配置

  #设置上传APP的大小限制
  resources:
    static-locations: classpath:/META-INF/resources/,classpath:/resources/,classpath:/static/,classpath:/public/,file:${web.upload-path},file:${web.upload}
  servlet:
    multipart:
      enabled: true #是否启用http上传处理
      max-request-size: 500MB #最大请求文件的大小
      max-file-size: 400MB #设置单个文件最大长度
      file-size-threshold: 30MB #当文件达到多少时进行磁盘写入


   #设置上传APP的大小限制


  redis:
    host: 127.0.0.1
    port: 6379
    password:
    database: 0

  #rabbitmq:
    #host: 36.112.118.18
    #username: guest
    #password: guest
    #port: 5672
    #virtual-host: /
   # connection-timeout: 15000
    #publisher-confirms: true
    #确认消息已发送到队列(Queue)
    #publisher-returns: true



  log:
      path: D:/logs/rabbitmq

  logging:
      config: classpath:logback-logback.xml



# mybatis-plus相关配置
mybatis-plus:
  # xml扫描，多个目录用逗号或者分号分隔（告诉 Mapper 所对应的 XML 文件位置）
  mapper-locations: classpath:**/mapper/*.xml
  # 以下配置均有默认值,可以不设置
  global-config:
    db-config:
      #主键类型  auto:"数据库ID自增" 1:"用户输入ID",2:"全局唯一ID (数字类型唯一ID)", 3:"全局唯一ID UUID";
      id-type: auto
      #字段策略 IGNORED:"忽略判断"  NOT_NULL:"非 NULL 判断")  NOT_EMPTY:"非空判断"
      field-strategy: NOT_EMPTY
      #数据库类型
      db-type: MYSQL
  configuration:
    # 是否开启自动驼峰命名规则映射:从数据库列名到Java属性驼峰命名的类似映射
    map-underscore-to-camel-case: true
    # 如果查询结果中包含空值的列，则 MyBatis 在映射的时候，不会映射这个字段
    call-setters-on-nulls: true
    # 这个配置会将执行的sql打印出来，在开发或测试的时候可以用
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
    #type-aliases-package: cn.souhui.dal.model
hikari:
  connection-test-query: SELECT 1 FROM DUAL
  minimum-idle: 5
  maximum-pool-size: 10
  idle-timeout: 300000
  max-lifetime: 1200000
  auto-commit: true
  pool-name: jpush


